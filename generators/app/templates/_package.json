{
  "name": "<%= name %>",
  "version": "0.0.0",
  "description": "<%= description %>",
  "main": "cjs/index.js",
  "browser": "dist/<%= ccname %>.js",
  "module": "es/index.js",
  "jsxnext:main": "es/index.js",
  <% if(sass) { %>"style": "css/index.css",<% } %>
  "files": [
    "dist",
    "cjs",
    "es",
    "src"<% if(sass) { %>,
    "css"<% } %>
  ],
  "engines": {
    "node": ">=4.0.0"
  },
  "scripts": {
    "prepublish": "npm run build",
    "precommit": "npm run lint:test",
    "prepush": "npm run lint:test",

    "release": "release-it",

    "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls",

    "lint": "npm run lint:eslint<% if (flow) {%> && npm run lint:flow<% } %>",
    "lint:eslint": "eslint src/*.js",
    <% if(flow) {%>"lint:flow": "flow --color always",<% } %>

    "test": "clear && jest",
    "test:coverage": "jest --coverage ",
    "test:watch": "clear && jest --watch",

    "lint:test": "npm run lint && npm run test:coverage",
    <% if(sass == 'sass') { %>
    "build:sass": "node-sass src/css --output-style=compressed -o ./css",
    "build:sass:watch": "node-sass -w src/css -o ./css --source-map=true --source-map-contents --error-bell",
    <% } %>
    <% if(sass == 'autoprefixer') { %>
    "prebuild:sass": "node-sass src/css --output-style=compressed -o ./css",
    "build:sass": "postcss --use autoprefixer -b 'last 2 versions' < ./css/index.css | postcss --use cssnano > ./css/index.min.css",
    "build:sass:watch": "node-sass -w src/css -o ./css --source-map=true --source-map-contents --error-bell",
    <% } %>
    "build": "clear && npm run lint:test && npm run build:cjs && npm run build:es && npm run build:umd <% if(sass) { %> && npm run build:sass<% } %>",
    "build:watch": "clear && rimraf cjs && cross-env BABEL_ENV=cjs babel -w src --out-dir cjs <% if(sass) { %> & npm run build:sass:watch<% } %>",

    "build:es": "rimraf es && cross-env BABEL_ENV=es babel src --out-dir es",
    "build:cjs": "rimraf cjs && cross-env BABEL_ENV=cjs babel src --out-dir cjs",
    "build:umd": "rimraf dist && cross-env BABEL_ENV=es rollup -c & cross-env BABEL_ENV=es NODE_ENV=production rollup -c"
  },
  "keywords": [],
  "author": "<%= author %> (<%= email %>)",
  "license": "<%= license %>",
  "repository": "<%= github %>/<%= name %>",
  "devDependencies": {
    <% if(sass == 'autoprefixer') { %>
    "autoprefixer": "^6.7.2",
    "cssnano": "^3.10.0",
    "postcss": "^5.2.12",
    "postcss-cli": "^2.6.0",
    <% } %>

    "babel-cli": "^6.18.0",
    "babel-core": "^6.17.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    <% if(flow) { %>"babel-plugin-transform-flow-strip-types": "^6.18.0",<% } %>
    "babel-preset-es2015": "^6.16.0",
    "coveralls": "^2.11.15",
    "cross-env": "^3.1.3",
    "eslint": "^3.12.0",
    "eslint-config-standard-extended": "^1.0.1",
    "eslint-plugin-babel": "^4.0.0",
    <% if(flow) { %>"flow-bin": "^0.37.0",<% } %>
    "jest": "^18.1.0",
    <% if(sass) { %>"node-sass": "^4.5.0",<% } %>
    "rimraf": "^2.5.4",
    "release-it": "^2.5.1",
    "husky": "^0.12.0",
    "rollup": "^0.39.2",
    "rollup-plugin-babel": "^2.6.1",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-plugin-bundle-size": "^1.0.1",
    "rollup-plugin-commonjs": "^7.0.0",
    "rollup-plugin-uglify": "^1.0.1"
  }
}
